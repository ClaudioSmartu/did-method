{{- $fullName := include "didctl.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "didctl.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "didctl.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "didctl.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: {{ include "didctl.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if or .Values.agent.tls.enabled .Values.persistence.enabled }}
      volumes:
        {{- if .Values.agent.tls.enabled }}
        - name: tls
          secret:
            secretName: {{ .Values.agent.tls.secret }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ printf "%s-storage" $fullName }}
        {{- end }}
      {{- end }}
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.agent.tls.enabled .Values.persistence.enabled }}
          volumeMounts:
            {{- if .Values.agent.tls.enabled }}
            - name: tls
              mountPath: /tmp
              readOnly: true
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: /etc/didctl/agent
            {{- end }}
          {{- end }}
          args:
            - "agent"
            - "--http"
            {{- if .Values.agent.tls.enabled }}
            - "--tls"
            {{- end }}
          ports:
            - name: rpc
              containerPort: 9090
              protocol: TCP
          env:
            - name: DIDCTL_SERVER_POW
              value: "{{ .Values.agent.pow }}"
            {{- if .Values.agent.tls.enabled }}
            - name: DIDCTL_SERVER_TLS_CERT
              value: "/tmp/tls.crt"
            - name: DIDCTL_SERVER_TLS_KEY
              value: "/tmp/tls.key"
            {{- end }}
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              {{- if .Values.agent.tls.enabled }}
              scheme: HTTPS
              {{- end }}
              path: /v1/ping
              port: rpc
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              {{- if .Values.agent.tls.enabled }}
              scheme: HTTPS
              {{- end }}
              path: /v1/ping
              port: rpc
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
